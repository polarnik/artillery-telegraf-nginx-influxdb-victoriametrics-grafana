version: '3.8'

services:
  telegraf:
    image: telegraf:1.30
    container_name: telegraf
    depends_on:
      - "nginx"
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
    volumes:
      - "./configs/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro"
      - "./configs/telegraf/telegraf.d:/etc/telegraf/telegraf.d:ro"
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -XGET localhost:8080"]
      interval: 30s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: no

  influxdb_v1:
    image: influxdb:1.8.6
    container_name: influxdb_v1
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
      INFLUXDB_REPORTING_DISABLED: true
      INFLUXDB_ADMIN_PASSWORD: password
      INFLUXDB_ADMIN_USER: admin
    volumes:
      - influx-v1-data:/var/lib/influxdb/
      - "./configs/influxdb_v1/influxdb.conf:/etc/influxdb/influxdb.conf:ro"
      - "./configs/influxdb_v1/init.sh:/docker-entrypoint-initdb.d/init.sh:ro"
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -XGET localhost:8086/health"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: unless-stopped

  influxdb_v2:
    image: influxdb:2.7.6
    container_name: influxdb_v2
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
      INFLUXD_REPORTING_DISABLED: true
      INFLUXD_STORAGE_CACHE_SNAPSHOT_WRITE_COLD_DURATION: 10m
      INFLUXD_STORAGE_COMPACT_FULL_WRITE_COLD_DURATION: 48d
      INFLUXD_STORAGE_COMPACT_THROUGHPUT_BURST: 80388608
      INFLUXD_STORAGE_MAX_CONCURRENT_COMPACTIONS: 1
      INFLUXD_STORAGE_SERIES_FILE_MAX_CONCURRENT_SNAPSHOT_COMPACTIONS: 1
      INFLUXD_QUERY_MEMORY_BYTES: 100000000
      INFLUXD_QUERY_INITIAL_MEMORY_BYTES: 100000
      INFLUXD_QUERY_CONCURRENCY: 1
      INFLUXD_STORAGE_CACHE_MAX_MEMORY_SIZE: 100000000
      INFLUXD_STORAGE_CACHE_SNAPSHOT_MEMORY_SIZE: 100000000
      INFLUXD_STORAGE_WAL_MAX_WRITE_DELAY: 10m
      INFLUXD_STORAGE_WRITE_TIMEOUT: 10s
      INFLUXD_STORAGE_WAL_MAX_CONCURRENT_WRITES: 1
      INFLUXD_STORAGE_SERIES_ID_SET_CACHE_SIZE: 0
      INFLUXD_QUERY_QUEUE_SIZE: 100
      INFLUXD_FLUX_LOG_ENABLED: false
    volumes:
      - "influx-v2-data:/var/lib/influxdb2/"
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -XGET localhost:8086/health"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:1.26
    depends_on:
      - "victoriametrics"
      - "influxdb_v1"
      - "influxdb_v2"
    ports:
      - "8080:8080"
      - "8081:8081"
    volumes:
      - "nginx-data:/data/nginx"
      - "./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
    healthcheck:
      test: ["CMD-SHELL", "curl -S -s -XGET localhost:8080/health"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 1s
    networks:
      - artillery_net
    restart: unless-stopped

  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent:v1.101.0
    depends_on:
      - "victoriametrics"
    ports:
      - "8429:8429"
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
    volumes:
      - "vmagent-data:/vmagentdata"
      - "./configs/vmagent/prometheus.yml:/etc/prometheus/prometheus.yml:ro"
    command:
      - "--promscrape.config=/etc/prometheus/prometheus.yml"
      - "--remoteWrite.url=http://victoriametrics:8428/api/v1/write"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO - 'http://127.0.0.1:8429/health'"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: unless-stopped

  # VictoriaMetrics instance, a single process responsible for
  # storing metrics and serve read requests.
  victoriametrics:
    container_name: victoriametrics
    image: victoriametrics/victoria-metrics:v1.101.0
    ports:
      - "8428:8428"
      - "8089:8089"
      - "8089:8089/udp"
      - "2003:2003"
      - "2003:2003/udp"
      - "4242:4242"
    volumes:
      - "victoria-metrics-data:/storage"
    environment:
      GOMEMLIMIT: 500MiB
      GOGC: 10
    command:
      - "--storageDataPath=/storage"
      - "--graphiteListenAddr=:2003"
      - "--opentsdbListenAddr=:4242"
      - "--httpListenAddr=:8428"
      - "--influxListenAddr=:8089"
      - "--vmalert.proxyURL=http://vmalert:8880"
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO - 'http://127.0.0.1:8428/-/healthy'" ]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana:10.4.3
    depends_on:
      - "victoriametrics"
      - "nginx"
      - "influxdb_v1"
      - "influxdb_v2"
    ports:
      - "3000:3000"
    volumes:
      - "grafana-data:/var/lib/grafana"
      - "./configs/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro"
      - "./configs/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro"
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_SECURITY_admin_user: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS:
      GF_FEATURE_TOGGLES_ENABLE: newNavigation
      GF_ANALYTICS_ENABLED: false
      GF_ANALYTICS_REPORTING_ENABLED: false
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_ANALYTICS_CHECK_FOR_PLUGIN_UPDATES: false
      GF_SECURITY_DISABLE_GRAVATAR: true
      GF_SECURITY_DISABLE_BRUTE_FORCE_LOGIN_PROTECTION: true
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_USERS_AUTO_ASSIGN_ORG_ROLE: Admin
      GF_USERS_LOGIN_HINT: admin
      GF_USERS_PASSWORD_HINT: admin
      GF_USERS_ALLOW_ORG_CREATE: true
      GF_AUTH_ANONYMOUS_ENABLED: true
      GF_AUTH_ANONYMOUS_ORG_ROLE: Admin
      GF_NEWS_NEWS_FEED_ENABLED: false
      GF_QUERY_CONCURRENT_QUERY_LIMIT: 5
      GF_FEATURE_MANAGEMENT_ALLOW_EDITING: true
      GF_CACHING_ENABLED: true
      GF_DATAPROXY_TIMEOUT: 30
      GF_DATAPROXY_MAX_CONNS_PER_HOST: 5
      GF_DATAPROXY_MAX_IDLE_CONNECTIONS: 2
      GF_DATAPROXY_ROW_LIMIT: 10000
      GF_ANNOTATIONS_DASHBOARD_MAX_AGE: 10d
      GF_ANNOTATIONS_DASHBOARD_MAX_ANNOTATIONS_TO_KEEP: 10000
      GF_ANNOTATIONS_API_MAX_AGE: 10d
      GF_ANNOTATIONS_API_MAX_ANNOTATIONS_TO_KEEP: 10000
      GF_EXTERNAL_IMAGE_STORAGE_PROVIDER: local
      GF_SQL_DATASOURCES_MAX_IDLE_CONNS_DEFAULT: 2
      GF_SQL_DATASOURCES_MAX_OPEN_CONNS_DEFAULT: 5
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO - 'http://127.0.0.1:3000/api/health'" ]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: unless-stopped

  # vmalert executes alerting and recording rules
  vmalert:
    container_name: vmalert
    image: victoriametrics/vmalert:v1.101.0
    depends_on:
      - "victoriametrics"
      - "alertmanager"
    ports:
      - "8880:8880"
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
    volumes:
      - "./configs/vmalert/alerts.yml:/etc/alerts/alerts.yml:ro"
      - "./configs/vmalert/alerts-health.yml:/etc/alerts/alerts-health.yml:ro"
      - "./configs/vmalert/alerts-vmagent.yml:/etc/alerts/alerts-vmagent.yml:ro"
      - "./configs/vmalert/alerts-vmalert.yml:/etc/alerts/alerts-vmalert.yml:ro"
    command:
      - "--datasource.url=http://victoriametrics:8428/"
      - "--remoteRead.url=http://victoriametrics:8428/"
      - "--remoteWrite.url=http://victoriametrics:8428/"
      - "--notifier.url=http://alertmanager:9093/"
      - "--rule=/etc/alerts/*.yml"
      # display source of alerts in grafana
      - "--external.url=http://127.0.0.1:3000" #grafana outside container
      # when copypaste the line be aware of '$$' for escaping in '$expr'
      - '--external.alert.source=explore?orgId=1&left={"datasource":"VictoriaMetrics","queries":[{"expr":{{$$expr|jsonEscape|queryEscape}},"refId":"A"}],"range":{"from":"now-1h","to":"now"}}'
    healthcheck:
      test: ["CMD-SHELL", "wget -qO - 'http://127.0.0.1:8880/health'"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 10s
    networks:
      - artillery_net
    restart: unless-stopped

  # alertmanager receives alerting notifications from vmalert
  # and distributes them according to --config.file.
  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.27.0
    volumes:
      - "./configs/alertmanager/alertmanager.yml:/config/alertmanager.yml:ro"
    environment:
      GOMEMLIMIT: 300MiB
      GOGC: 10
    command:
      - "--config.file=/config/alertmanager.yml"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO - 'http://localhost:9093/-/healthy'"]
      interval: 60s
      timeout: 1s
      retries: 1
      start_period: 1s
    ports:
      - "9093:9093"
    networks:
      - artillery_net
    restart: unless-stopped

volumes:
  influx-v1-data:
    name: influx-v1-data
  influx-v2-data:
    name: influx-v2-data
  grafana-data:
    name: grafana-data
  victoria-metrics-data:
    name: victoria-metrics-data
  vmagent-data:
    name: vmagent-data
  nginx-data:
    name: nginx-data
networks:
  artillery_net:
